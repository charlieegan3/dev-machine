snippet namespace "Namespace Template"
apiVersion: v1
kind: Namespace
metadata:
  name: hello
endsnippet

snippet pod "Pod Template"
apiVersion: v1
kind: Pod
metadata:
  name: hello
  labels:
    app: hello
spec:
  containers:
  - name: hello
    image: nginx
    ports:
    - containerPort: 80
      protocol: TCP
      name: http
    livenessProbe:
      httpGet:
      port: admin
      path: /healthz
      initialDelaySeconds: 1
      periodSeconds: 1
    readinessProbe:
      httpGet:
      port: admin
      path: /ready
      initialDelaySeconds: 1
      periodSeconds: 1
    resources:
      requests:
        memory: "50Mi"
        cpu: "100m"
      limits:
        memory: "500Mi"
        cpu: "500m"
endsnippet

snippet deployment "Deployment Template"
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello
spec:
  selector:
    matchLabels:
      app: hello
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: hello
    spec:
      containers:
      - name: hello
        image: nginx
        ports:
        - containerPort: 80
          protocol: TCP
          name: http
        livenessProbe:
          httpGet:
            port: admin
            path: /healthz
          initialDelaySeconds: 1
          periodSeconds: 1
        readinessProbe:
          httpGet:
            port: admin
            path: /ready
          initialDelaySeconds: 1
          periodSeconds: 1
        resources:
          requests:
            memory: "50Mi"
            cpu: "100m"
          limits:
            memory: "500Mi"
            cpu: "500m"
        lifecycle:
          preStop:
            httpGet:
              path: "/pre-stop"
              port: 8085
      volumes:
      - name: data
        emptyDir: {}
endsnippet

snippet serviceaccount "Service Template"
apiVersion: v1
kind: ServiceAccount
metadata:
  name: name
  namespace: default
endsnippet

snippet service "Service Template"
apiVersion: v1
kind: Service
metadata:
  name: hello
  labels:
    app: hello
  namespace: hello
spec:
  type: ClusterIP
  selector:
    app: hello
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http
endsnippet

snippet cronjob "CronJob Template"
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: hello-oneshotjob
spec:
  schedule: "* * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: hello-oneshotjob
            image: nginx
            args:
            - /hello
endsnippet

snippet hpa "HPA Template"
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: hello-hpa
  namespace: hello
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hello-dep
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 50
endsnippet

snippet configmap "ConfigMap Template"
kind: ConfigMap
apiVersion: v1
metadata:
  name: hello-config
  namespace: default
data:
  name: things
endsnippet

snippet secret "Secret Template"
apiVersion: v1
kind: Secret
metadata:
  namespace: default
  name: mysecret
type: Opaque
data:
  username: base64data
endsnippet

snippet job "Job Template"
apiVersion: batch/v1
kind: Job
metadata:
  name: cluster-init
  namespace: serializer
  labels:
    app: cockroachdb
spec:
  backoffLimit: 5
  template:
    spec:
      containers:
      - name: cluster-init
        image: cockroachdb/cockroach:v2.0.3
        imagePullPolicy: IfNotPresent
        command:
          - /cockroach/cockroach
        args:
          - init
          - --insecure
          - --host=cockroachdb-0.cockroachdb
      restartPolicy: OnFailure
endsnippet

snippet ingress "Ingress Template"
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: serializer
  namespace: serializer
  labels:
    app: serializer
  annotations:
    certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: nginx
spec:
  tls:
  - hosts:
    - serializer.cluster.charlieegan3.com
    secretName: serializer-tls
  rules:
  - host: serializer.cluster.charlieegan3.com
    http:
      paths:
      - path: /
        backend:
          serviceName: serializer
          servicePort: 80
endsnippet
